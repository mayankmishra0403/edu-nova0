name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Create .env for React build
        run: |
          cat <<EOF > .env
          REACT_APP_GEMINI_KEY=${{ secrets.REACT_APP_GEMINI_KEY }}
          REACT_APP_APPWRITE_ENDPOINT=${{ secrets.APPWRITE_ENDPOINT }}
          REACT_APP_APPWRITE_PROJECT_ID=${{ secrets.APPWRITE_PROJECT_ID }}
          REACT_APP_APPWRITE_DATABASE_ID=${{ secrets.APPWRITE_DATABASE_ID }}
          REACT_APP_APPWRITE_COLLECTION_ID=${{ secrets.APPWRITE_COLLECTION_ID }}
            REACT_APP_APPWRITE_BUCKET_ID=${{ secrets.APPWRITE_BUCKET_ID }}
          REACT_APP_APP_BASE_URL=${{ secrets.APP_BASE_URL }}
          REACT_APP_APPWRITE_FILES_COLLECTION_ID=${{ secrets.APPWRITE_FILES_COLLECTION_ID }}
          REACT_APP_APPWRITE_BUCKET_ID_YEAR1=${{ secrets.APPWRITE_BUCKET_ID_YEAR1 }}
          REACT_APP_APPWRITE_BUCKET_ID_YEAR2=${{ secrets.APPWRITE_BUCKET_ID_YEAR2 }}
          REACT_APP_APPWRITE_BUCKET_ID_YEAR3=${{ secrets.APPWRITE_BUCKET_ID_YEAR3 }}
          REACT_APP_APPWRITE_BUCKET_ID_YEAR4=${{ secrets.APPWRITE_BUCKET_ID_YEAR4 }}
          REACT_APP_APPWRITE_ADMIN_EMAILS=${{ secrets.APPWRITE_ADMIN_EMAILS }}
          REACT_APP_APPWRITE_CHAT_SESSIONS_COLLECTION_ID=${{ secrets.APPWRITE_CHAT_SESSIONS_COLLECTION_ID }}
          REACT_APP_APPWRITE_CHAT_MESSAGES_COLLECTION_ID=${{ secrets.APPWRITE_CHAT_MESSAGES_COLLECTION_ID }}
          REACT_APP_APPWRITE_COMPANY_DSA_BUCKET_ID=${{ secrets.APPWRITE_COMPANY_DSA_BUCKET_ID }}
          REACT_APP_APPWRITE_COMPANY_DSA_PAGES_COLLECTION_ID=${{ secrets.APPWRITE_COMPANY_DSA_PAGES_COLLECTION_ID }}
          REACT_APP_APPWRITE_COMPANY_DSA_USAGE_COLLECTION_ID=${{ secrets.APPWRITE_COMPANY_DSA_USAGE_COLLECTION_ID }}
          REACT_APP_APPWRITE_COMPANY_DSA_PARSED_COLLECTION_ID=${{ secrets.APPWRITE_COMPANY_DSA_PARSED_COLLECTION_ID }}
          REACT_APP_APPWRITE_USER_PROFILE_COLLECTION_ID=${{ secrets.APPWRITE_USER_PROFILE_COLLECTION_ID }}
          REACT_APP_APPWRITE_AVATARS_BUCKET_ID=${{ secrets.APPWRITE_AVATARS_BUCKET_ID }}
          EOF
          echo "Created .env with provided secrets (some may be blank if secret not set)."
      - name: Verify critical env vars
        run: |
          echo '--- .env preview (redacted) ---'
          grep -E 'REACT_APP_APPWRITE_(ENDPOINT|PROJECT_ID)=' .env | sed -E 's/=.*/=***redacted***/'
          if grep -q '^REACT_APP_APPWRITE_ENDPOINT=$' .env; then echo 'ERROR: REACT_APP_APPWRITE_ENDPOINT is empty (set secret APPWRITE_ENDPOINT)'; exit 1; fi
          if grep -q '^REACT_APP_APPWRITE_PROJECT_ID=$' .env; then echo 'ERROR: REACT_APP_APPWRITE_PROJECT_ID is empty (set secret APPWRITE_PROJECT_ID)'; exit 1; fi
          echo 'Critical env vars present.'
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WONDERFUL_FIELD_04E53CC00 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
